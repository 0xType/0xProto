{
.appVersion = "3316";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adieresis Adotaccent Adotbelow Agrave Ahookabove Amacron Aogonek Aring Atilde AE B Bmacronbelow C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Dcaron Dcircumflexbelow Dcroat Ddotbelow Dmacronbelow Eth E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edieresis Edotaccent Edotbelow Egrave Ehookabove Emacron Eogonek Etilde Schwa F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gmacron H Hbar Hbrevebelow Hcedilla Hcircumflex Hdotbelow I Iacute Ibreve Icaron Icircumflex Idieresis Idotaccent Idotbelow Igrave Ihookabove Imacron Iogonek Itilde J Jcircumflex K Kcommaaccent Kdotbelow Kmacronbelow L Lacute Lcaron Lcircumflexbelow Lcommaaccent Ldot Ldotbelow Ldotbelowmacron Lmacronbelow Lslash M Macute Mdotaccent Mdotbelow N Nacute Ncaron Ncircumflexbelow Ncommaaccent Ndotaccent Ndotbelow Ngrave Nmacronbelow Ntilde Eng O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odieresis Odotaccent Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Omacron Oogonek Oslash Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent Rdotaccent Rdotbelow Rdotbelowmacron Rmacronbelow S Sacute Scaron Scedilla Scircumflex Scommaaccent Sdotbelow Germandbls T Tbar Tcaron Tcedilla Tcircumflexbelow Tcommaaccent Tdotbelow Tmacronbelow U Uacute Ubreve Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Umacron Uogonek Uring Utilde V Vdotbelow W Wacute Wcircumflex Wdieresis Wgrave X Xdieresis Y Yacute Ycircumflex Ydieresis Ydotaccent Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zcircumflex Zdotaccent Zdotbelow Zmacronbelow";
name = Uppercase;
},
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adieresis Adotaccent Adotbelow Agrave Ahookabove Amacron Aogonek Aring Atilde AE B Bmacronbelow C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Dcaron Dcircumflexbelow Dcroat Ddotbelow Dmacronbelow Eth E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edieresis Edotaccent Edotbelow Egrave Ehookabove Emacron Eogonek Etilde Schwa F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gmacron H Hbar Hbrevebelow Hcedilla Hcircumflex Hdotbelow I Iacute Ibreve Icaron Icircumflex Idieresis Idotaccent Idotbelow Igrave Ihookabove Imacron Iogonek Itilde J Jcircumflex K Kcommaaccent Kdotbelow Kmacronbelow L Lacute Lcaron Lcircumflexbelow Lcommaaccent Ldot Ldotbelow Ldotbelowmacron Lmacronbelow Lslash M Macute Mdotaccent Mdotbelow N Nacute Ncaron Ncircumflexbelow Ncommaaccent Ndotaccent Ndotbelow Ngrave Nmacronbelow Ntilde Eng O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odieresis Odotaccent Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Omacron Oogonek Oslash Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent Rdotaccent Rdotbelow Rdotbelowmacron Rmacronbelow S Sacute Scaron Scedilla Scircumflex Scommaaccent Sdotbelow Germandbls T Tbar Tcaron Tcedilla Tcircumflexbelow Tcommaaccent Tdotbelow Tmacronbelow U Uacute Ubreve Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Umacron Uogonek Uring Utilde V Vdotbelow W Wacute Wcircumflex Wdieresis Wgrave X Xdieresis Y Yacute Ycircumflex Ydieresis Ydotaccent Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zcircumflex Zdotaccent Zdotbelow Zmacronbelow a aacute abreve abreveacute abrevedotbelow abrevegrave abrevehookabove abrevetilde acaron acircumflex acircumflexacute acircumflexdotbelow acircumflexgrave acircumflexhookabove acircumflextilde adieresis adotaccent adotbelow agrave ahookabove amacron aogonek aring atilde ae b bmacronbelow c cacute ccaron ccedilla ccircumflex cdotaccent d dcaron dcircumflexbelow dcroat ddotbelow dmacronbelow eth e eacute ebreve ecaron ecircumflex ecircumflexacute ecircumflexdotbelow ecircumflexgrave ecircumflexhookabove ecircumflextilde edieresis edotaccent edotbelow egrave ehookabove emacron eogonek etilde schwa f g gbreve gcaron gcircumflex gcommaaccent gdotaccent gmacron h hbar hbrevebelow hcedilla hcircumflex hdotbelow hmacronbelow i idotless iacute ibreve icaron icircumflex idieresis idotaccent idotbelow igrave ihookabove imacron iogonek itilde j jdotless jcaron jcircumflex k kcommaaccent kdotbelow kmacronbelow l lacute lcaron lcircumflexbelow lcommaaccent ldot ldotbelow ldotbelowmacron lmacronbelow lslash m macute mdotaccent mdotbelow n nacute ncaron ncircumflexbelow ncommaaccent ndotaccent ndotbelow ngrave nmacronbelow ntilde eng o oacute obreve ocaron ocircumflex ocircumflexacute ocircumflexdotbelow ocircumflexgrave ocircumflexhookabove ocircumflextilde odieresis odotaccent odotbelow ograve ohookabove ohorn ohornacute ohorndotbelow ohorngrave ohornhookabove ohorntilde ohungarumlaut omacron oogonek oslash otilde oe p thorn q r racute rcaron rcommaaccent rdotaccent rdotbelow rdotbelowmacron rmacronbelow s sacute scaron scedilla scircumflex scommaaccent sdotbelow germandbls t tbar tcaron tcedilla tcircumflexbelow tcommaaccent tdotbelow tmacronbelow u uacute ubreve ucaron ucircumflex udieresis udieresisacute udieresiscaron udieresisgrave udieresismacron udotbelow ugrave uhookabove uhorn uhornacute uhorndotbelow uhorngrave uhornhookabove uhorntilde uhungarumlaut umacron uogonek uring utilde v vdotbelow w wacute wcircumflex wdieresis wgrave x xdieresis y yacute ycircumflex ydieresis ydotaccent ydotbelow ygrave yhookabove ymacron ytilde z zacute zcaron zcircumflex zdotaccent zdotbelow zmacronbelow i.both l.both m.both t.both i.left l.left m.left t.left i.right l.right m.right t.right ordfeminine ordmasculine mu lowcircumflexmod";
name = AllLetters;
},
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adieresis Adotaccent Adotbelow Agrave Ahookabove Amacron Aogonek Aring Atilde AE B Bmacronbelow C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Dcaron Dcircumflexbelow Dcroat Ddotbelow Dmacronbelow Eth E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edieresis Edotaccent Edotbelow Egrave Ehookabove Emacron Eogonek Etilde Schwa F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gmacron H Hbar Hbrevebelow Hcedilla Hcircumflex Hdotbelow I Iacute Ibreve Icaron Icircumflex Idieresis Idotaccent Idotbelow Igrave Ihookabove Imacron Iogonek Itilde J Jcircumflex K Kcommaaccent Kdotbelow Kmacronbelow L Lacute Lcaron Lcircumflexbelow Lcommaaccent Ldot Ldotbelow Ldotbelowmacron Lmacronbelow Lslash M Macute Mdotaccent Mdotbelow N Nacute Ncaron Ncircumflexbelow Ncommaaccent Ndotaccent Ndotbelow Ngrave Nmacronbelow Ntilde Eng O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odieresis Odotaccent Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Omacron Oogonek Oslash Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent Rdotaccent Rdotbelow Rdotbelowmacron Rmacronbelow S Sacute Scaron Scedilla Scircumflex Scommaaccent Sdotbelow Germandbls T Tbar Tcaron Tcedilla Tcircumflexbelow Tcommaaccent Tdotbelow Tmacronbelow U Uacute Ubreve Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Umacron Uogonek Uring Utilde V Vdotbelow W Wacute Wcircumflex Wdieresis Wgrave X Xdieresis Y Yacute Ycircumflex Ydieresis Ydotaccent Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zcircumflex Zdotaccent Zdotbelow Zmacronbelow a aacute abreve abreveacute abrevedotbelow abrevegrave abrevehookabove abrevetilde acaron acircumflex acircumflexacute acircumflexdotbelow acircumflexgrave acircumflexhookabove acircumflextilde adieresis adotaccent adotbelow agrave ahookabove amacron aogonek aring atilde ae b bmacronbelow c cacute ccaron ccedilla ccircumflex cdotaccent d dcaron dcircumflexbelow dcroat ddotbelow dmacronbelow eth e eacute ebreve ecaron ecircumflex ecircumflexacute ecircumflexdotbelow ecircumflexgrave ecircumflexhookabove ecircumflextilde edieresis edotaccent edotbelow egrave ehookabove emacron eogonek etilde schwa f g gbreve gcaron gcircumflex gcommaaccent gdotaccent gmacron h hbar hbrevebelow hcedilla hcircumflex hdotbelow hmacronbelow i idotless iacute ibreve icaron icircumflex idieresis idotaccent idotbelow igrave ihookabove imacron iogonek itilde j jdotless jcaron jcircumflex k kcommaaccent kdotbelow kmacronbelow l lacute lcaron lcircumflexbelow lcommaaccent ldot ldotbelow ldotbelowmacron lmacronbelow lslash m macute mdotaccent mdotbelow n nacute ncaron ncircumflexbelow ncommaaccent ndotaccent ndotbelow ngrave nmacronbelow ntilde eng o oacute obreve ocaron ocircumflex ocircumflexacute ocircumflexdotbelow ocircumflexgrave ocircumflexhookabove ocircumflextilde odieresis odotaccent odotbelow ograve ohookabove ohorn ohornacute ohorndotbelow ohorngrave ohornhookabove ohorntilde ohungarumlaut omacron oogonek oslash otilde oe p thorn q r racute rcaron rcommaaccent rdotaccent rdotbelow rdotbelowmacron rmacronbelow s sacute scaron scedilla scircumflex scommaaccent sdotbelow germandbls t tbar tcaron tcedilla tcircumflexbelow tcommaaccent tdotbelow tmacronbelow u uacute ubreve ucaron ucircumflex udieresis udieresisacute udieresiscaron udieresisgrave udieresismacron udotbelow ugrave uhookabove uhorn uhornacute uhorndotbelow uhorngrave uhornhookabove uhorntilde uhungarumlaut umacron uogonek uring utilde v vdotbelow w wacute wcircumflex wdieresis wgrave x xdieresis y yacute ycircumflex ydieresis ydotaccent ydotbelow ygrave yhookabove ymacron ytilde z zacute zcaron zcircumflex zdotaccent zdotbelow zmacronbelow i.both l.both m.both t.both i.left l.left m.left t.left i.right l.right m.right t.right ordfeminine ordmasculine mu lowcircumflexmod zero one two three four five six seven eight nine space nbspace figurespace punctuationspace zerowidthspace zeroWidthNoBreakSpace wordjoiner CR hyphen_greater bracketleft_bar period_equal colon_colon colon_colon_colon colon_equal colon_greater_colon colon_less_colon exclam_equal exclam_equal_equal question_question asterisk_asterisk asterisk_asterisk_asterisk asterisk_greater numbersign_equal slash_slash slash_slash_slash period comma colon semicolon ellipsis exclam exclamdown question questiondown periodcentered bullet asterisk numbersign slash backslash twodotenleader periodcentered.loclCAT period.spacer colon.spacer exclam.spacer question.spacer asterisk.spacer numbersign.spacer slash.spacer periodcentered.loclCAT.case hyphen endash emdash underscore hyphen.spacer parenleft parenright braceleft braceright bracketleft bracketright bracketleft.spacer quotesinglbase quotedblbase quotedblleft quotedblright quoteleft quoteright guillemetleft guillemetright guilsinglleft guilsinglright quotedbl quotesingle baht ampersand_ampersand bar_bracketright bar_bar bar_bar_bar_greater bar_bar_greater bar_greater dollar_greater plus_greater equal_colon_equal equal_exclam_equal equal_equal equal_equal_equal equal_greater equal_greater_equal equal_greater_greater equal_less_equal equal_less_less greater_equal_greater greater_greater greater_greater_greater less_hyphen less_asterisk less_asterisk_greater less_bar less_bar_bar less_bar_bar_bar less_bar_greater less_dollar less_dollar_greater less_plus less_plus_greater less_equal_greater less_equal_less less_greater less_less less_less_less percent_percent at ampersand paragraph section copyright registered published trademark degree bar dagger daggerdbl servicemark ampersand.spacer bar.spacer cent dollar dong euro liraTurkish naira peso ruble rupeeIndian sterling won yen dollar.spacer plus minus multiply divide equal notequal greater less greaterequal lessequal plusminus approxequal asciitilde asciicircum percent plus.spacer equal.spacer greater.spacer less.spacer percent.spacer boxDoubleDownAndHorizontal boxDoubleDownAndLeft boxDoubleDownAndRight boxDoubleHorizontal boxDoubleUpAndHorizontal boxDoubleUpAndLeft boxDoubleUpAndRight boxDoubleVertical boxDoubleVerticalAndHorizontal boxDoubleVerticalAndLeft boxDoubleVerticalAndRight boxDownDoubleAndHorizontalSingle boxDownDoubleAndLeftSingle boxDownDoubleAndRightSingle boxDownHeavyAndHorizontalLight boxDownHeavyAndLeftLight boxDownHeavyAndLeftUpLight boxDownHeavyAndRightLight boxDownHeavyAndRightUpLight boxDownHeavyAndUpHorizontalLight boxDownLightAndHorizontalHeavy boxDownLightAndLeftHeavy boxDownLightAndLeftUpHeavy boxDownLightAndRightHeavy boxDownLightAndRightUpHeavy boxDownLightAndUpHorizontalHeavy boxDownSingleAndHorizontalDouble boxDownSingleAndLeftDouble boxDownSingleAndRightDouble boxHeavyDoubleDashHorizontal boxHeavyDoubleDashVertical boxHeavyDown boxHeavyDownAndHorizontal boxHeavyDownAndLeft boxHeavyDownAndRight boxHeavyHorizontal boxHeavyLeft boxHeavyLeftAndLightRight boxHeavyQuadrupleDashHorizontal boxHeavyQuadrupleDashVertical boxHeavyRight boxHeavyTripleDashHorizontal boxHeavyTripleDashVertical boxHeavyUp boxHeavyUpAndHorizontal boxHeavyUpAndLeft boxHeavyUpAndLightDown boxHeavyUpAndRight boxHeavyVertical boxHeavyVerticalAndHorizontal boxHeavyVerticalAndLeft boxHeavyVerticalAndRight boxLeftDownHeavyAndRightUpLight boxLeftHeavyAndRightDownLight boxLeftHeavyAndRightUpLight boxLeftHeavyAndRightVerticalLight boxLeftLightAndRightDownHeavy boxLeftLightAndRightUpHeavy boxLeftLightAndRightVerticalHeavy boxLeftUpHeavyAndRightDownLight boxLightArcDownAndLeft boxLightArcDownAndRight boxLightArcUpAndLeft boxLightArcUpAndRight boxLightDiagonalCross boxLightDiagonalUpperLeftToLowerRight boxLightDiagonalUpperRightToLowerLeft boxLightDoubleDashHorizontal boxLightDoubleDashVertical boxLightDown boxLightDownAndHorizontal boxLightDownAndLeft boxLightDownAndRight boxLightHorizontal boxLightLeft boxLightLeftAndHeavyRight boxLightQuadrupleDashHorizontal boxLightQuadrupleDashVertical boxLightRight boxLightTripleDashHorizontal boxLightTripleDashVertical boxLightUp boxLightUpAndHeavyDown boxLightUpAndLeft boxLightUpAndRight boxLightVertical boxLightVerticalAndHorizontal boxLightVerticalAndLeft boxLightVerticalAndRight boxRightDownHeavyAndLeftUpLight boxRightHeavyAndLeftDownLight boxRightHeavyAndLeftUpLight boxRightHeavyAndLeftVerticalLight boxRightLightAndLeftDownHeavy boxRightLightAndLeftUpHeavy boxRightLightAndLeftVerticalHeavy boxRightUpHeavyAndLeftDownLight boxUpDoubleAndHorizontalSingle boxUpDoubleAndLeftSingle boxUpDoubleAndRightSingle boxUpHeavyAndDownHorizontalLight boxUpHeavyAndHorizontalLight boxUpHeavyAndLeftDownLight boxUpHeavyAndLeftLight boxUpHeavyAndRightDownLight boxUpHeavyAndRightLight boxUpLightAndDownHorizontalHeavy boxUpLightAndHorizontalHeavy boxUpLightAndLeftDownHeavy boxUpLightAndLeftHeavy boxUpLightAndRightDownHeavy boxUpLightAndRightHeavy boxUpSingleAndHorizontalDouble boxUpSingleAndLeftDouble boxUpSingleAndRightDouble boxVerticalDoubleAndHorizontalSingle boxVerticalDoubleAndLeftSingle boxVerticalDoubleAndRightSingle boxVerticalHeavyAndHorizontalLight boxVerticalHeavyAndLeftLight boxVerticalHeavyAndRightLight boxVerticalLightAndHorizontalHeavy boxVerticalLightAndLeftHeavy boxVerticalLightAndRightHeavy boxVerticalSingleAndHorizontalDouble boxVerticalSingleAndLeftDouble boxVerticalSingleAndRightDouble boxLeftDownHeavyAndRightUpLight.001 dieresiscomb dieresiscomb_gravecomb dieresiscomb_acutecomb dieresiscomb_caroncomb dieresiscomb_macroncomb dotaccentcomb gravecomb acutecomb hungarumlautcomb caroncomb.alt circumflexcomb caroncomb brevecomb ringcomb tildecomb macroncomb hookabovecomb commaturnedabovecomb horncomb dotbelowcomb dieresisbelowcomb commaaccentcomb cedillacomb ogonekcomb circumflexbelowcomb brevebelowcomb macronbelowcomb brevecomb_acutecomb brevecomb_gravecomb brevecomb_hookabovecomb brevecomb_tildecomb circumflexcomb_acutecomb circumflexcomb_gravecomb circumflexcomb_hookabovecomb circumflexcomb_tildecomb dieresiscomb.case dieresiscomb_gravecomb.case dieresiscomb_acutecomb.case dieresiscomb_caroncomb.case dieresiscomb_macroncomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case caroncomb.alt.case circumflexcomb.case circumflexcomb_gravecomb.case circumflexcomb_acutecomb.case circumflexcomb_tildecomb.case circumflexcomb_hookabovecomb.case caroncomb.case brevecomb.case brevecomb_gravecomb.case brevecomb_acutecomb.case brevecomb_tildecomb.case brevecomb_hookabovecomb.case ringcomb.case tildecomb.case macroncomb.case hookabovecomb.case horncomb.case dotbelowcomb.case commaaccentcomb.case cedillacomb.case ogonekcomb.case circumflexbelowcomb.case brevebelowcomb.case macronbelowcomb.case dieresis dotaccent grave acute hungarumlaut circumflex caron breve ring tilde macron cedilla ogonek apostrophemod commaturnedmod doubleprimemod macronlowmod primemod ringhalfleft ringhalfright verticallinelowmod verticallinemod";
name = All;
}
);
customParameters = (
{
name = isFixedPitch;
value = 1;
},
{
name = panose;
value = (
2,
0,
0,
9,
0,
0,
0,
0,
0,
0
);
},
{
name = "Write lastChange";
value = 0;
}
);
date = "2024-09-06 07:36:55 +0000";
familyName = 0xProto;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature calt;
feature locl;
feature ordn;
feature case;
";
tag = aalt;
},
{
code = "### texture healing

@defaults_expand = [m];
@defaults_shrink = [i l t];

@expanded_to_both = [m.both];
@expanded_to_left = [m.left];
@expanded_to_right = [m.right];

@shrinked_to_both = [i.both l.both t.both];
@shrinked_to_left = [i.left l.left t.left];
@shrinked_to_right = [i.right l.right t.right];

@can_give_space_without_substitute = [period comma colon semicolon parenleft parenright braceleft braceright bracketleft bracketright quotesingle quotedbl grave space];

lookup expandRight_shrinkBoth_expandLeft {
  # m i m => m.right i.both m.left
  sub @defaults_expand' @defaults_shrink @defaults_expand by @expanded_to_right;
  sub @expanded_to_right @defaults_shrink' @defaults_expand by @shrinked_to_both;
  sub @expanded_to_right @shrinked_to_both @defaults_expand' by @expanded_to_left;
} expandRight_shrinkBoth_expandLeft;

lookup shrinkLeft_expandBoth_shrinkRight {
  # i m i => i.left m.both i.right
  sub @defaults_shrink' @defaults_expand @defaults_shrink by @shrinked_to_left;
  sub @shrinked_to_left @defaults_expand' @defaults_shrink by @expanded_to_both;
  sub @shrinked_to_left @expanded_to_both @defaults_shrink' by @shrinked_to_right;
} shrinkLeft_expandBoth_shrinkRight;

lookup canGiveSpaceWithoutSubstitute_expandBoth_shrinkRight {
  # period m i => period m.both i.right
  sub @can_give_space_without_substitute @defaults_expand' @defaults_shrink by @expanded_to_both;
  sub @can_give_space_without_substitute @expanded_to_both @defaults_shrink' by @shrinked_to_right;
} canGiveSpaceWithoutSubstitute_expandBoth_shrinkRight;

lookup shrinkLeft_expandBoth_canGiveSpaceWithoutSubstitute {
  # i m period => i.left m.both period
  sub @defaults_shrink' @defaults_expand @can_give_space_without_substitute by @shrinked_to_left;
  sub @shrinked_to_left @defaults_expand' @can_give_space_without_substitute by @expanded_to_both;
} shrinkLeft_expandBoth_canGiveSpaceWithoutSubstitute;

lookup canGiveSpaceWithoutSubstitute_expandBoth_canGiveSpaceWithoutSubstitute {
  # period m period => period m.both period
  sub @can_give_space_without_substitute @defaults_expand' @can_give_space_without_substitute by @expanded_to_both;
} canGiveSpaceWithoutSubstitute_expandBoth_canGiveSpaceWithoutSubstitute;

lookup shrinkLeft_expandLeft {
  # i m => i.left m.left
  ignore sub @defaults_shrink @defaults_expand @defaults_shrink';
  ignore sub @defaults_shrink @defaults_expand' @defaults_shrink;
  ignore sub @defaults_shrink' @defaults_expand @defaults_shrink;
  ignore sub @defaults_shrink @defaults_expand @can_give_space_without_substitute';
  ignore sub @defaults_shrink @defaults_expand' @can_give_space_without_substitute;
  ignore sub @defaults_shrink' @defaults_expand @can_give_space_without_substitute;
  sub @defaults_shrink' @defaults_expand by @shrinked_to_left;
  sub @shrinked_to_left @defaults_expand' by @expanded_to_left;
} shrinkLeft_expandLeft;

lookup expandRight_shrinkRight {
  # m i => m.right i.right
  ignore sub @defaults_shrink @defaults_expand' @defaults_shrink;
  ignore sub @defaults_shrink' @defaults_expand @defaults_shrink;
  ignore sub @defaults_expand @defaults_shrink' @defaults_expand;
  ignore sub @defaults_expand' @defaults_shrink @defaults_expand;
  ignore sub @can_give_space_without_substitute @defaults_expand @defaults_shrink';
  ignore sub @can_give_space_without_substitute @defaults_expand' @defaults_shrink;
  sub @defaults_expand' @defaults_shrink by @expanded_to_right;
  sub @expanded_to_right @defaults_shrink' by @shrinked_to_right;
} expandRight_shrinkRight;

lookup canGiveSpaceWithoutSubstitute_expandLeft {
  # period m => period m.left
  ignore sub @can_give_space_without_substitute @defaults_expand' @defaults_shrink;
  sub @can_give_space_without_substitute @defaults_expand' by @expanded_to_left;
} canGiveSpaceWithoutSubstitute_expandLeft;

lookup expandRight_canGiveSpaceWithoutSubstitute {
  # m period => m.right period
  ignore sub @can_give_space_without_substitute @defaults_expand' @can_give_space_without_substitute;
  ignore sub @defaults_shrink @defaults_expand' @can_give_space_without_substitute;
  sub @defaults_expand' @can_give_space_without_substitute by @expanded_to_right;
} expandRight_canGiveSpaceWithoutSubstitute;

lookup shrinkLeft_expandBoth_EOL {
  # i m EOL => i.left m.both EOL
  ignore sub @defaults_shrink @defaults_expand' @AllLetters;
  ignore sub @defaults_shrink @defaults_expand' space @All;
  ignore sub @shrinked_to_left @expanded_to_left' @All;
  sub @defaults_shrink' @defaults_expand by @shrinked_to_left;
  sub @shrinked_to_left @defaults_expand' by @expanded_to_both;
  sub @shrinked_to_left @expanded_to_left' by @expanded_to_both;
} shrinkLeft_expandBoth_EOL;

lookup canGiveSpaceWithoutSubstitute_expandBoth_EOL {
  # period m EOL => period m.both EOL
  ignore sub @can_give_space_without_substitute @defaults_expand' @AllLetters;
  ignore sub @can_give_space_without_substitute @defaults_expand' space @All;
  ignore sub @can_give_space_without_substitute @expanded_to_left' @All;
  sub @can_give_space_without_substitute @defaults_expand' by @expanded_to_both;
  sub @can_give_space_without_substitute @expanded_to_left' by @expanded_to_both;
} canGiveSpaceWithoutSubstitute_expandBoth_EOL;


### programming ligatures

# ***
lookup asterisk_asterisk_asterisk {
  ignore sub asterisk asterisk' asterisk asterisk;
  ignore sub asterisk' asterisk asterisk asterisk;
  ignore sub slash asterisk' asterisk asterisk;
  ignore sub asterisk' asterisk asterisk slash;
  sub asterisk.spacer asterisk.spacer asterisk' by asterisk_asterisk_asterisk;
  sub asterisk.spacer asterisk' asterisk by asterisk.spacer;
  sub asterisk' asterisk asterisk by asterisk.spacer;
} asterisk_asterisk_asterisk;

# **
lookup asterisk_asterisk {
  ignore sub asterisk' asterisk asterisk;
  ignore sub asterisk asterisk' asterisk;
  ignore sub slash asterisk' asterisk;
  ignore sub asterisk' asterisk slash;
  sub asterisk.spacer asterisk' by asterisk_asterisk;
  sub asterisk' asterisk by asterisk.spacer;
} asterisk_asterisk;

# <*>
lookup less_asterisk_greater {
  sub less.spacer asterisk.spacer greater' by less_asterisk_greater;
  sub less.spacer asterisk' greater by asterisk.spacer;
  sub less' asterisk greater by less.spacer;
} less_asterisk_greater;

# *>
lookup asterisk_greater {
  sub asterisk.spacer greater' by asterisk_greater;
  sub asterisk' greater by asterisk.spacer;
} asterisk_greater;

# <*
lookup less_asterisk {
  sub less.spacer asterisk' by less_asterisk;
  sub less' asterisk by less.spacer;
} less_asterisk;

# <|>
lookup less_bar_greater {
  sub less.spacer bar.spacer greater' by less_bar_greater;
  sub less.spacer bar' greater by bar.spacer;
  sub less' bar greater by less.spacer;
} less_bar_greater;

# ///
lookup slash_slash_slash {
  ignore sub slash slash' slash slash;
  ignore sub slash' slash slash slash;
  sub slash.spacer slash.spacer slash' by slash_slash_slash;
  sub slash.spacer slash' slash by slash.spacer;
  sub slash' slash slash by slash.spacer;
} slash_slash_slash;

# //
lookup slash_slash {
  ignore sub slash slash' slash;
  ignore sub slash' slash slash;
  sub slash.spacer slash' by slash_slash;
  sub slash' slash by slash.spacer;
} slash_slash;

# |||>
lookup bar_bar_bar_greater {
  sub bar.spacer bar.spacer bar.spacer greater' by bar_bar_bar_greater;
  sub bar.spacer bar.spacer bar' greater by bar.spacer;
  sub bar.spacer bar' bar greater by bar.spacer;
  sub bar' bar bar greater by bar.spacer;
} bar_bar_bar_greater;

# ||>
lookup bar_bar_greater {
  sub bar.spacer bar.spacer greater' by bar_bar_greater;
  sub bar.spacer bar' greater by bar.spacer;
  sub bar' bar greater by bar.spacer;
} bar_bar_greater;

# |>
lookup bar_greater {
  sub bar.spacer greater' by bar_greater;
  sub bar' greater by bar.spacer;
} bar_greater;

# |]
lookup bar_bracketright {
  sub bar.spacer bracketright' by bar_bracketright;
  sub bar' bracketright by bar.spacer;
} bar_bracketright;

# [|
lookup bracketleft_bar {
  sub bracketleft.spacer bar' by bracketleft_bar;
  sub bracketleft' bar by bracketleft.spacer;
} bracketleft_bar;

# <|||
lookup less_bar_bar_bar {
  sub less.spacer bar.spacer bar.spacer bar' by less_bar_bar_bar;
  sub less.spacer bar.spacer bar' bar by bar.spacer;
  sub less.spacer bar' bar bar by bar.spacer;
  sub less' bar bar bar by less.spacer;
} less_bar_bar_bar;

# <||
lookup less_bar_bar {
  sub less.spacer bar.spacer bar' by less_bar_bar;
  sub less.spacer bar' bar by bar.spacer;
  sub less' bar bar by less.spacer;
} less_bar_bar;

# <|
lookup less_bar {
  sub less.spacer bar' by less_bar;
  sub less' bar by less.spacer;
} less_bar;

# ||
lookup bar_bar {
  ignore sub bar' bar bar;
  ignore sub bar bar' bar;
  sub bar.spacer bar' by bar_bar;
  sub bar' bar by bar.spacer;
} bar_bar;

# <>
lookup less_greater {
  sub less.spacer greater' by less_greater;
  sub less' greater by less.spacer;
} less_greater;

# ->
lookup hyphen_greater {
  sub hyphen.spacer greater' by hyphen_greater;
  sub hyphen' greater by hyphen.spacer;
} hyphen_greater;

# <-
lookup less_hyphen {
  sub less.spacer hyphen' by less_hyphen;
  sub less' hyphen by less.spacer;
} less_hyphen;

# <=>
lookup less_equal_greater {
  sub less.spacer equal.spacer greater' by less_equal_greater;
  sub less.spacer equal' greater by equal.spacer;
  sub less' equal greater by less.spacer;
} less_equal_greater;

# <=<
lookup less_equal_less {
  sub less.spacer equal.spacer less' by less_equal_less;
  sub less.spacer equal' less by equal.spacer;
  sub less' equal less by less.spacer;
} less_equal_less;

# >=>
lookup greater_equal_greater {
  sub greater.spacer equal.spacer greater' by greater_equal_greater;
  sub greater.spacer equal' greater by equal.spacer;
  sub greater' equal greater by greater.spacer;
} greater_equal_greater;

# =>=
lookup equal_greater_equal {
  sub equal.spacer greater.spacer equal' by equal_greater_equal;
  sub equal.spacer greater' equal by greater.spacer;
  sub equal' greater equal by equal.spacer;
} equal_greater_equal;

# =<=
lookup equal_less_equal {
  sub equal.spacer less.spacer equal' by equal_less_equal;
  sub equal.spacer less' equal by less.spacer;
  sub equal' less equal by equal.spacer;
} equal_less_equal;

# =>>
lookup equal_greater_greater {
  sub equal.spacer greater.spacer greater' by equal_greater_greater;
  sub equal.spacer greater' greater by greater.spacer;
  sub equal' greater greater by equal.spacer;
} equal_greater_greater;

# =<<
lookup equal_less_less {
  sub equal.spacer less.spacer less' by equal_less_less;
  sub equal.spacer less' less by less.spacer;
  sub equal' less less by equal.spacer;
} equal_less_less;

# =>
lookup equal_greater {
  sub equal.spacer greater' by equal_greater;
  sub equal' greater by equal.spacer;
} equal_greater;

# <<<
lookup less_less_less {
  ignore sub less less' less less;
  ignore sub less' less less less;
  sub less.spacer less.spacer less' by less_less_less;
  sub less.spacer less' less by less.spacer;
  sub less' less less by less.spacer;
} less_less_less;

# <<
lookup less_less {
  ignore sub less less' less;
  ignore sub less' less less;
  sub less.spacer less' by less_less;
  sub less' less by less.spacer;
} less_less;

# >>>
lookup greater_greater_greater {
  ignore sub greater greater' greater greater;
  ignore sub greater' greater greater greater;
  sub greater.spacer greater.spacer greater' by greater_greater_greater;
  sub greater.spacer greater' greater by greater.spacer;
  sub greater' greater greater by greater.spacer;
} greater_greater_greater;

# >>
lookup greater_greater {
  ignore sub greater greater' greater;
  ignore sub greater' greater greater;
  sub greater.spacer greater' by greater_greater;
  sub greater' greater by greater.spacer;
} greater_greater;

# <+>
lookup less_plus_greater {
  sub less.spacer plus.spacer greater' by less_plus_greater;
  sub less.spacer plus' greater by plus.spacer;
  sub less' plus greater by less.spacer;
} less_plus_greater;

# +>
lookup plus_greater {
  sub plus.spacer greater' by plus_greater;
  sub plus' greater by plus.spacer;
} plus_greater;

# +>
lookup less_plus {
  sub less.spacer plus' by less_plus;
  sub less' plus by less.spacer;
} less_plus;

# !==
lookup exclam_equal_equal {
  ignore sub exclam equal' equal equal;
  ignore sub exclam equal equal' equal;
  ignore sub exclam equal equal equal';
  sub exclam.spacer equal.spacer equal' by exclam_equal_equal;
  sub exclam.spacer equal' equal by equal.spacer;
  sub exclam' equal equal by exclam.spacer;
} exclam_equal_equal;

# ===
lookup equal_equal_equal {
  ignore sub equal equal' equal equal;
  ignore sub equal' equal equal equal;
  sub equal.spacer equal.spacer equal' by equal_equal_equal;
  sub equal.spacer equal' equal by equal.spacer;
  sub equal' equal equal by equal.spacer;
} equal_equal_equal;

# ==
lookup equal_equal {
  ignore sub equal equal' equal;
  ignore sub equal' equal equal;
  sub equal.spacer equal' by equal_equal;
  sub equal' equal by equal.spacer;
} equal_equal;

# .=
lookup period_equal {
  sub period.spacer equal' by period_equal;
  sub period' equal by period.spacer;
} period_equal;

# =:=
lookup equal_colon_equal {
  sub equal.spacer colon.spacer equal' by equal_colon_equal;
  sub equal.spacer colon' equal by colon.spacer;
  sub equal' colon equal by equal.spacer;
} equal_colon_equal;

# :=
lookup colon_equal {
  sub colon.spacer equal' by colon_equal;
  sub colon' equal by colon.spacer;
} colon_equal;

# :::
lookup colon_colon_colon {
  ignore sub colon colon' colon colon;
  ignore sub colon' colon colon colon;
  sub colon.spacer colon.spacer colon' by colon_colon_colon;
  sub colon.spacer colon' colon by colon.spacer;
  sub colon' colon colon by colon.spacer;
} colon_colon_colon;

# ::
lookup colon_colon {
  ignore sub colon colon' colon;
  ignore sub colon' colon colon;
  sub colon.spacer colon' by colon_colon;
  sub colon' colon by colon.spacer;
} colon_colon;

# :<:
lookup colon_less_colon {
  sub colon.spacer less.spacer colon' by colon_less_colon;
  sub colon.spacer less' colon by less.spacer;
  sub colon' less colon by colon.spacer;
} colon_less_colon ;

# :>:
lookup colon_greater_colon {
  sub colon.spacer greater.spacer colon' by colon_greater_colon;
  sub colon.spacer greater' colon by greater.spacer;
  sub colon' greater colon by colon.spacer;
} colon_greater_colon ;

# =!=
lookup equal_exclam_equal {
  sub equal.spacer exclam.spacer equal' by equal_exclam_equal;
  sub equal.spacer exclam' equal by exclam.spacer;
  sub equal' exclam equal by equal.spacer;
} equal_exclam_equal;

# !=
lookup exclam_equal {
  sub exclam.spacer equal' by exclam_equal;
  sub exclam' equal by exclam.spacer;
} exclam_equal;

# #=
lookup numbersign_equal {
  sub numbersign.spacer equal' by numbersign_equal;
  sub numbersign' equal by numbersign.spacer;
} numbersign_equal;

# %%
lookup percent_percent {
  ignore sub percent' percent percent;
  ignore sub percent percent' percent;
  sub percent.spacer percent' by percent_percent;
  sub percent' percent by percent.spacer;
} percent_percent;

# &&
lookup ampersand_ampersand {
  ignore sub ampersand' ampersand ampersand;
  ignore sub ampersand ampersand' ampersand;
  sub ampersand.spacer ampersand' by ampersand_ampersand;
  sub ampersand' ampersand by ampersand.spacer;
} ampersand_ampersand;

# ??
lookup question_question {
  ignore sub question' question question;
  ignore sub question question' question;
  sub question.spacer question' by question_question;
  sub question' question by question.spacer;
} question_question;

lookup less_dollar_greater {
  sub less.spacer dollar.spacer greater' by less_dollar_greater;
  sub less.spacer dollar' greater by dollar.spacer;
  sub less' dollar greater by less.spacer;
} less_dollar_greater;

lookup less_dollar {
  sub less.spacer dollar' by less_dollar;
  sub less' dollar by less.spacer;
} less_dollar;

lookup dollar_greater {
  sub dollar.spacer greater' by dollar_greater;
  sub dollar' greater by dollar.spacer;
} dollar_greater;

";
tag = calt;
},
{
code = "# lookupflag IgnoreMarks;
# sub colon equal by colon_equal;
# sub question question by question_question;
# sub slash slash by slash_slash;
# sub equal greater by equal_greater;
# sub greater greater by greater_greater;
# sub less less by less_less;
# sub ampersand ampersand by ampersand_ampersand;
# sub hyphen greater by hyphen_greater;
# sub exclam equal by exclam_equal;
# sub equal equal by equal_equal;
# sub equal equal equal by equal_equal_equal;
# sub exclam equal equal by exclam_equal_equal;
# sub colon colon by colon_colon;
# sub less hyphen by less_hyphen;
# sub colon colon colon by colon_colon_colon;
# sub slash slash slash by slash_slash_slash;
# sub equal colon equal by equal_colon_equal;
# sub equal exclam equal by equal_exclam_equal;
# sub greater greater greater by greater_greater_greater;
# sub less equal greater by less_equal_greater;
# sub less less less by less_less_less;
# sub bar bar by bar_bar;
# sub bar greater by bar_greater;
# sub less bar by less_bar;
# sub bar bar greater by bar_bar_greater;
# sub less bar bar by less_bar_bar;
# sub bar bar bar greater by bar_bar_bar_greater;
# sub  less bar bar bar by less_bar_bar_bar;
# sub less bar greater by less_bar_greater;
# sub less greater by less_greater;
# sub numbersign equal by numbersign_equal;
# sub asterisk asterisk by asterisk_asterisk;
# sub asterisk asterisk asterisk by asterisk_asterisk_asterisk;
# sub colon less colon by colon_less_colon;
# sub colon greater colon by colon_greater_colon;
# sub bracketleft bar by bracketleft_bar;
# sub equal greater greater by equal_greater_greater;
# sub bar bracketright by bar_bracketright;
# sub equal less less by equal_less_less;
# sub greater equal greater by greater_equal_greater;
# sub less equal less by less_equal_less;
# sub equal greater equal by equal_greater_equal;
# sub equal less equal by equal_less_equal;
# sub less asterisk by less_asterisk;
# sub less plus by less_plus;
# sub less asterisk greater by less_asterisk_greater;
# sub less plus greater by less_plus_greater;
# sub asterisk greater by asterisk_greater;
# sub plus greater by plus_greater;
# sub period equal by period_equal;
# sub less dollar by less_dollar;
# sub dollar greater by dollar_greater;
# sub less dollar greater by less_dollar_greater;
# sub percent percent by percent_percent;
";
disabled = 1;
tag = liga;
},
{
code = "script latn;
language AZE;
lookup locl_latn_0 {
	sub i by idotaccent;
} locl_latn_0;
language CRT;
lookup locl_latn_0;
language KAZ;
lookup locl_latn_0;
language TAT;
lookup locl_latn_0;
language TRK;
lookup locl_latn_0;

script latn;
language ROM;
lookup locl_latn_1 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;

language MOL;
lookup locl_latn_1;

script latn;
language CAT;
lookup locl_latn_2 {
	sub l periodcentered' l by periodcentered.loclCAT;
	sub l periodcentered.loclCAT' l by ldot l;
	sub L periodcentered' L by periodcentered.loclCAT.case;
	sub L periodcentered.loclCAT.case' L by Ldot L;
} locl_latn_2;

";
tag = locl;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
tag = ordn;
},
{
automatic = 1;
code = "sub periodcentered.loclCAT by periodcentered.loclCAT.case;
sub dieresiscomb by dieresiscomb.case;
sub dieresiscomb_gravecomb by dieresiscomb_gravecomb.case;
sub dieresiscomb_acutecomb by dieresiscomb_acutecomb.case;
sub dieresiscomb_caroncomb by dieresiscomb_caroncomb.case;
sub dieresiscomb_macroncomb by dieresiscomb_macroncomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub caroncomb.alt by caroncomb.alt.case;
sub circumflexcomb by circumflexcomb.case;
sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;
sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;
sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;
sub circumflexcomb_hookabovecomb by circumflexcomb_hookabovecomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub brevecomb_gravecomb by brevecomb_gravecomb.case;
sub brevecomb_acutecomb by brevecomb_acutecomb.case;
sub brevecomb_tildecomb by brevecomb_tildecomb.case;
sub brevecomb_hookabovecomb by brevecomb_hookabovecomb.case;
sub ringcomb by ringcomb.case;
sub tildecomb by tildecomb.case;
sub macroncomb by macroncomb.case;
sub hookabovecomb by hookabovecomb.case;
sub horncomb by horncomb.case;
sub dotbelowcomb by dotbelowcomb.case;
sub commaaccentcomb by commaaccentcomb.case;
sub cedillacomb by cedillacomb.case;
sub ogonekcomb by ogonekcomb.case;
sub circumflexbelowcomb by circumflexbelowcomb.case;
sub brevebelowcomb by brevebelowcomb.case;
sub macronbelowcomb by macronbelowcomb.case;
";
tag = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub bar bar bar greater by bar_bar_bar_greater;
sub less bar bar bar by less_bar_bar_bar;
sub asterisk asterisk asterisk by asterisk_asterisk_asterisk;
sub bar bar greater by bar_bar_greater;
sub colon colon colon by colon_colon_colon;
sub colon greater colon by colon_greater_colon;
sub colon less colon by colon_less_colon;
sub equal colon equal by equal_colon_equal;
sub equal equal equal by equal_equal_equal;
sub equal exclam equal by equal_exclam_equal;
sub equal greater equal by equal_greater_equal;
sub equal greater greater by equal_greater_greater;
sub equal less equal by equal_less_equal;
sub equal less less by equal_less_less;
sub exclam equal equal by exclam_equal_equal;
sub greater equal greater by greater_equal_greater;
sub greater greater greater by greater_greater_greater;
sub less asterisk greater by less_asterisk_greater;
sub less bar bar by less_bar_bar;
sub less bar greater by less_bar_greater;
sub less dollar greater by less_dollar_greater;
sub less equal greater by less_equal_greater;
sub less equal less by less_equal_less;
sub less less less by less_less_less;
sub less plus greater by less_plus_greater;
sub slash slash slash by slash_slash_slash;
sub ampersand ampersand by ampersand_ampersand;
sub asterisk asterisk by asterisk_asterisk;
sub asterisk greater by asterisk_greater;
sub bar bar by bar_bar;
sub bar bracketright by bar_bracketright;
sub bar greater by bar_greater;
sub bracketleft bar by bracketleft_bar;
sub colon colon by colon_colon;
sub colon equal by colon_equal;
sub dollar greater by dollar_greater;
sub equal equal by equal_equal;
sub equal greater by equal_greater;
sub exclam equal by exclam_equal;
sub greater greater by greater_greater;
sub hyphen greater by hyphen_greater;
sub less asterisk by less_asterisk;
sub less bar by less_bar;
sub less dollar by less_dollar;
sub less greater by less_greater;
sub less hyphen by less_hyphen;
sub less less by less_less;
sub less plus by less_plus;
sub numbersign equal by numbersign_equal;
sub percent percent by percent_percent;
sub period equal by period_equal;
sub plus greater by plus_greater;
sub question question by question_question;
sub slash slash by slash_slash;
";
tag = dlig;
}
);
fontMaster = (
{
axesValues = (
400
);
customParameters = (
{
name = strikeoutPosition;
value = 330;
},
{
name = strikeoutSize;
value = 50;
}
);
id = m01;
metricValues = (
{
over = 16;
pos = 750;
},
{
over = 16;
pos = 710;
},
{
over = 16;
pos = 550;
},
{
over = -16;
},
{
over = -16;
pos = -250;
},
{
}
);
name = Regular;
userData = {
GSCornerRadius = 218;
};
visible = 1;
},
{
axesValues = (
700
);
customParameters = (
{
name = strikeoutPosition;
value = 330;
},
{
name = strikeoutSize;
value = 50;
}
);
iconName = SemiBold;
id = m002;
metricValues = (
{
over = 16;
pos = 750;
},
{
over = 16;
pos = 710;
},
{
over = 16;
pos = 550;
},
{
over = -16;
},
{
over = -16;
pos = -250;
},
{
}
);
name = Bold;
userData = {
GSCornerRadius = 218;
};
}
);
instances = (
{
axesValues = (
400
);
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = postscriptFullNames;
values = (
{
language = dflt;
value = "0xProto Regular";
}
);
}
);
},
{
axesValues = (
700
);
instanceInterpolations = {
m002 = 1;
};
isBold = 1;
name = Bold;
properties = (
{
key = postscriptFullNames;
values = (
{
language = dflt;
value = "0xProto Bold";
}
);
}
);
weightClass = 700;
}
);
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
name = "for monospace font";
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "0xType Project Authors (https://github.com/0xType)";
}
);
},
{
key = manufacturerURL;
value = "https://0xtype.dev/";
},
{
key = vendorID;
value = 0x;
}
);
unitsPerEm = 1000;
userData = {
GSDimensionPlugin.Dimensions = {
m002 = {
HH = "130";
HV = "138";
nV = "131";
nd = "118";
tH = "122";
};
m01 = {
};
};
};
versionMajor = 2;
versionMinor = 201;
}
